/// <reference types="node" />
export declare type input = string;
export declare type output = string;
export declare type resize_operation = {
    type: 'resize';
    width?: bigint;
    height?: bigint;
};
export declare type round_corner_operation = {
    type: 'round-corner';
    rx: bigint;
    ry: bigint;
};
export declare type grayscale_operation = {
    type: 'grayscale';
};
export declare type flip_operation = {
    type: 'flip';
    direction: 'vertical' | 'horizontal';
};
export declare type noop_operation = {
    type: 'noop';
};
export declare type trim_operation = {
    type: 'trim';
    threshold?: number;
};
export declare type operation = resize_operation | round_corner_operation | grayscale_operation | noop_operation | trim_operation;
export declare type operations = operation[];
export declare type source_type = (config?: any) => Buffer | ReadableStream;
export declare type target_type = (img: any, config?: any) => Buffer | ReadableStream;
export declare type format = {
    type?: 'gif' | 'jpeg' | 'png' | 'webp' | 'avif' | 'tiff' | 'heif' | 'raw';
    options?: any;
};
export declare type imageman_args = {
    input: input;
    operations?: operations;
    output: output;
    format?: format;
    sourceTypes?: {
        [key: string]: source_type;
    };
    targetTypes?: {
        [key: string]: target_type;
    };
};
//# sourceMappingURL=types.d.ts.map