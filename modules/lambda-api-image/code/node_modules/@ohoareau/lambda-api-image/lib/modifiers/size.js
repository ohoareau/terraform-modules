"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const filterValues_1 = __importDefault(require("../utils/filterValues"));
const mapping = {
    icon: '16x16',
    'fb-profile': '180x180',
    'fb-cover': '828x315',
    'fb-shared-image': '1200x630',
    'fb-shared-link': '1200x627',
    'fb-highlighted-image': '1200x717',
    'in-bg-image': '1000x425',
    'in-standard-logo': '100x60',
    'in-profile-image': '400x400',
    'in-career-cover-photo': '974x300',
    'in-banner-image': '646x200',
    'in-square-logo': '50x50',
    'yt-channel-cover-photo': '2560x1440',
    'yt-video-upload': '1280x760',
    'ig-profile-image': '110x110',
    'ig-photo-thumbnail': '161x161',
    'ig-photo-size': '1080x1080',
    'tw-header-photo': '1500x500',
    'tw-profile-photo': '400x400',
    'tw-in-stream-photo': '440x220',
    'pi-profile-image': '165x165',
    'pi-board-display': '222x150',
    'pi-board-display-small': '55x55',
    'pi-pin-size': '236x',
};
async function size(order, request) {
    var _a;
    let size = (_a = request.params) === null || _a === void 0 ? void 0 : _a.size;
    if (!size)
        return;
    if (Array.isArray(size))
        size = size[0];
    if (!size)
        return;
    size = mapping[size] || size;
    if (!size)
        return;
    const [width = undefined, height = undefined] = size.split('x');
    const fit = filterValues_1.default(request.params.size_fit, ['cover', 'contain', 'fill', 'inside', 'outside']);
    const position = filterValues_1.default(request.params.size_position, ['top', 'right-top', 'right', 'right-bottom', 'bottom', 'left-bottom', 'left', 'left-top'], 'space');
    const gravity = filterValues_1.default(request.params.size_gravity, ['north', 'northeast', 'east', 'southeast', 'south', 'southwest', 'west', 'northwest', 'center', 'centre']);
    const strategy = filterValues_1.default(request.params.size_strategy, ['entropy', 'attention']);
    const background = request.params.size_background;
    const kernel = filterValues_1.default(request.params.size_kernel, ['nearest', 'cubic', 'mitchell', 'lanczos2', 'lanczos3']);
    const withoutEnlargement = filterValues_1.default(request.params.size_enlargement, ['0', '1', 'false', 'true', 'none', 'no', 'yes'], 'boolean');
    const fastShrinkOnLoad = filterValues_1.default(request.params.size_fastshrink, ['0', '1', 'false', 'true', 'none', 'no', 'yes'], 'boolean');
    order.operations.push({
        type: 'resize',
        width: !!width ? width : undefined,
        height: !!height ? height : undefined,
        ...(fit ? { fit } : {}),
        ...(position ? { position } : {}),
        ...(gravity ? { gravity } : {}),
        ...(strategy ? { strategy } : {}),
        ...(background ? { background } : {}),
        ...(kernel ? { kernel } : {}),
        ...(withoutEnlargement ? { withoutEnlargement } : {}),
        ...(fastShrinkOnLoad ? { fastShrinkOnLoad } : {}),
    });
}
exports.size = size;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2l6ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tb2RpZmllcnMvc2l6ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUNBLHlFQUFpRDtBQUVqRCxNQUFNLE9BQU8sR0FBRztJQUNaLElBQUksRUFBRSxPQUFPO0lBQ2IsWUFBWSxFQUFFLFNBQVM7SUFDdkIsVUFBVSxFQUFFLFNBQVM7SUFDckIsaUJBQWlCLEVBQUUsVUFBVTtJQUM3QixnQkFBZ0IsRUFBRSxVQUFVO0lBQzVCLHNCQUFzQixFQUFFLFVBQVU7SUFDbEMsYUFBYSxFQUFFLFVBQVU7SUFDekIsa0JBQWtCLEVBQUUsUUFBUTtJQUM1QixrQkFBa0IsRUFBRSxTQUFTO0lBQzdCLHVCQUF1QixFQUFFLFNBQVM7SUFDbEMsaUJBQWlCLEVBQUUsU0FBUztJQUM1QixnQkFBZ0IsRUFBRSxPQUFPO0lBQ3pCLHdCQUF3QixFQUFFLFdBQVc7SUFDckMsaUJBQWlCLEVBQUUsVUFBVTtJQUM3QixrQkFBa0IsRUFBRSxTQUFTO0lBQzdCLG9CQUFvQixFQUFFLFNBQVM7SUFDL0IsZUFBZSxFQUFFLFdBQVc7SUFDNUIsaUJBQWlCLEVBQUUsVUFBVTtJQUM3QixrQkFBa0IsRUFBRSxTQUFTO0lBQzdCLG9CQUFvQixFQUFFLFNBQVM7SUFDL0Isa0JBQWtCLEVBQUUsU0FBUztJQUM3QixrQkFBa0IsRUFBRSxTQUFTO0lBQzdCLHdCQUF3QixFQUFFLE9BQU87SUFDakMsYUFBYSxFQUFFLE1BQU07Q0FDeEIsQ0FBQztBQUVLLEtBQUssVUFBVSxJQUFJLENBQUMsS0FBWSxFQUFFLE9BQWdCOztJQUNyRCxJQUFJLElBQUksU0FBRyxPQUFPLENBQUMsTUFBTSwwQ0FBRSxJQUFJLENBQUM7SUFDaEMsSUFBSSxDQUFDLElBQUk7UUFBRSxPQUFPO0lBQ2xCLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUM7UUFBRSxJQUFJLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxD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QUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxFQUFDLFVBQVUsRUFBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7UUFDbkMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBQyxNQUFNLEVBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1FBQzNCLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLENBQUMsRUFBQyxrQkFBa0IsRUFBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7UUFDbkQsR0FBRyxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxFQUFDLGdCQUFnQixFQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztLQUNsRCxDQUFDLENBQUM7QUFDUCxDQUFDO0FBN0JELG9CQTZCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7b3JkZXIsIHJlcXVlc3R9IGZyb20gJy4uL3R5cGVzJztcbmltcG9ydCBmaWx0ZXJWYWx1ZXMgZnJvbSBcIi4uL3V0aWxzL2ZpbHRlclZhbHVlc1wiO1xuXG5jb25zdCBtYXBwaW5nID0ge1xuICAgIGljb246ICcxNngxNicsXG4gICAgJ2ZiLXByb2ZpbGUnOiAnMTgweDE4MCcsXG4gICAgJ2ZiLWNvdmVyJzogJzgyOHgzMTUnLFxuICAgICdmYi1zaGFyZWQtaW1hZ2UnOiAnMTIwMHg2MzAnLFxuICAgICdmYi1zaGFyZWQtbGluayc6ICcxMjAweDYyNycsXG4gICAgJ2ZiLWhpZ2hsaWdodGVkLWltYWdlJzogJzEyMDB4NzE3JyxcbiAgICAnaW4tYmctaW1hZ2UnOiAnMTAwMHg0MjUnLFxuICAgICdpbi1zdGFuZGFyZC1sb2dvJzogJzEwMHg2MCcsXG4gICAgJ2luLXByb2ZpbGUtaW1hZ2UnOiAnNDAweDQwMCcsXG4gICAgJ2luLWNhcmVlci1jb3Zlci1waG90byc6ICc5NzR4MzAwJyxcbiAgICAnaW4tYmFubmVyLWltYWdlJzogJzY0NngyMDAnLFxuICAgICdpbi1zcXVhcmUtbG9nbyc6ICc1MHg1MCcsXG4gICAgJ3l0LWNoYW5uZWwtY292ZXItcGhvdG8nOiAnMjU2MHgxNDQwJyxcbiAgICAneXQtdmlkZW8tdXBsb2FkJzogJzEyODB4NzYwJyxcbiAgICAnaWctcHJvZmlsZS1pbWFnZSc6ICcxMTB4MTEwJyxcbiAgICAnaWctcGhvdG8tdGh1bWJuYWlsJzogJzE2MXgxNjEnLFxuICAgICdpZy1waG90by1zaXplJzogJzEwODB4MTA4MCcsXG4gICAgJ3R3LWhlYWRlci1waG90byc6ICcxNTAweDUwMCcsXG4gICAgJ3R3LXByb2ZpbGUtcGhvdG8nOiAnNDAweDQwMCcsXG4gICAgJ3R3LWluLXN0cmVhbS1waG90byc6ICc0NDB4MjIwJyxcbiAgICAncGktcHJvZmlsZS1pbWFnZSc6ICcxNjV4MTY1JyxcbiAgICAncGktYm9hcmQtZGlzcGxheSc6ICcyMjJ4MTUwJyxcbiAgICAncGktYm9hcmQtZGlzcGxheS1zbWFsbCc6ICc1NXg1NScsXG4gICAgJ3BpLXBpbi1zaXplJzogJzIzNngnLFxufTtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNpemUob3JkZXI6IG9yZGVyLCByZXF1ZXN0OiByZXF1ZXN0KSB7XG4gICAgbGV0IHNpemUgPSByZXF1ZXN0LnBhcmFtcz8uc2l6ZTtcbiAgICBpZiAoIXNpemUpIHJldHVybjtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShzaXplKSkgc2l6ZSA9IHNpemVbMF07XG4gICAgaWYgKCFzaXplKSByZXR1cm47XG4gICAgc2l6ZSA9IG1hcHBpbmdbc2l6ZV0gfHwgc2l6ZTtcbiAgICBpZiAoIXNpemUpIHJldHVybjtcbiAgICBjb25zdCBbd2lkdGggPSB1bmRlZmluZWQsIGhlaWdodCA9IHVuZGVmaW5lZF0gPSAoc2l6ZSBhcyBzdHJpbmcpLnNwbGl0KCd4Jyk7XG4gICAgY29uc3QgZml0ID0gZmlsdGVyVmFsdWVzKHJlcXVlc3QucGFyYW1zLnNpemVfZml0IGFzIGFueSwgWydjb3ZlcicsICdjb250YWluJywgJ2ZpbGwnLCAnaW5zaWRlJywgJ291dHNpZGUnXSk7XG4gICAgY29uc3QgcG9zaXRpb24gPSBmaWx0ZXJWYWx1ZXMocmVxdWVzdC5wYXJhbXMuc2l6ZV9wb3NpdGlvbiBhcyBhbnksIFsndG9wJywgJ3JpZ2h0LXRvcCcsICdyaWdodCcsICdyaWdodC1ib3R0b20nLCAnYm90dG9tJywgJ2xlZnQtYm90dG9tJywgJ2xlZnQnLCAnbGVmdC10b3AnXSwgJ3NwYWNlJyk7XG4gICAgY29uc3QgZ3Jhdml0eSA9IGZpbHRlclZhbHVlcyhyZXF1ZXN0LnBhcmFtcy5zaXplX2dyYXZpdHkgYXMgYW55LCBbJ25vcnRoJywgJ25vcnRoZWFzdCcsICdlYXN0JywgJ3NvdXRoZWFzdCcsICdzb3V0aCcsICdzb3V0aHdlc3QnLCAnd2VzdCcsICdub3J0aHdlc3QnLCAnY2VudGVyJywgJ2NlbnRyZSddKTtcbiAgICBjb25zdCBzdHJhdGVneSA9IGZpbHRlclZhbHVlcyhyZXF1ZXN0LnBhcmFtcy5zaXplX3N0cmF0ZWd5IGFzIGFueSwgWydlbnRyb3B5JywgJ2F0dGVudGlvbiddKTtcbiAgICBjb25zdCBiYWNrZ3JvdW5kID0gcmVxdWVzdC5wYXJhbXMuc2l6ZV9iYWNrZ3JvdW5kIGFzIGFueTtcbiAgICBjb25zdCBrZXJuZWwgPSBmaWx0ZXJWYWx1ZXMocmVxdWVzdC5wYXJhbXMuc2l6ZV9rZXJuZWwgYXMgYW55LCBbJ25lYXJlc3QnLCAnY3ViaWMnLCAnbWl0Y2hlbGwnLCAnbGFuY3pvczInLCAnbGFuY3pvczMnXSk7XG4gICAgY29uc3Qgd2l0aG91dEVubGFyZ2VtZW50ID0gZmlsdGVyVmFsdWVzKHJlcXVlc3QucGFyYW1zLnNpemVfZW5sYXJnZW1lbnQgYXMgYW55LCBbJzAnLCAnMScsICdmYWxzZScsICd0cnVlJywgJ25vbmUnLCAnbm8nLCAneWVzJ10sICdib29sZWFuJyk7XG4gICAgY29uc3QgZmFzdFNocmlua09uTG9hZCA9IGZpbHRlclZhbHVlcyhyZXF1ZXN0LnBhcmFtcy5zaXplX2Zhc3RzaHJpbmsgYXMgYW55LCBbJzAnLCAnMScsICdmYWxzZScsICd0cnVlJywgJ25vbmUnLCAnbm8nLCAneWVzJ10sICdib29sZWFuJyk7XG4gICAgb3JkZXIub3BlcmF0aW9ucy5wdXNoKHtcbiAgICAgICAgdHlwZTogJ3Jlc2l6ZScsXG4gICAgICAgIHdpZHRoOiAhIXdpZHRoID8gd2lkdGggOiB1bmRlZmluZWQsXG4gICAgICAgIGhlaWdodDogISFoZWlnaHQgPyBoZWlnaHQgOiB1bmRlZmluZWQsXG4gICAgICAgIC4uLihmaXQgPyB7Zml0fSA6IHt9KSxcbiAgICAgICAgLi4uKHBvc2l0aW9uID8ge3Bvc2l0aW9ufSA6IHt9KSxcbiAgICAgICAgLi4uKGdyYXZpdHkgPyB7Z3Jhdml0eX0gOiB7fSksXG4gICAgICAgIC4uLihzdHJhdGVneSA/IHtzdHJhdGVneX0gOiB7fSksXG4gICAgICAgIC4uLihiYWNrZ3JvdW5kID8ge2JhY2tncm91bmR9IDoge30pLFxuICAgICAgICAuLi4oa2VybmVsID8ge2tlcm5lbH0gOiB7fSksXG4gICAgICAgIC4uLih3aXRob3V0RW5sYXJnZW1lbnQgPyB7d2l0aG91dEVubGFyZ2VtZW50fSA6IHt9KSxcbiAgICAgICAgLi4uKGZhc3RTaHJpbmtPbkxvYWQgPyB7ZmFzdFNocmlua09uTG9hZH0gOiB7fSksXG4gICAgfSk7XG59Il19