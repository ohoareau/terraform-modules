"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const Block_1 = __importDefault(require("../../Block"));
const renderer_1 = require("@react-pdf/renderer");
const hocs_1 = require("../../hocs");
exports.Row010LayoutBlock = hocs_1.pdfComponent({
    layouts_row010: {
        display: 'flex',
        flexDirection: 'row',
    },
    layouts_row010_left: {
        width: '20%',
        justifyContent: 'flex-start',
    },
    layouts_row010_center: {
        flex: 1,
        justifyContent: 'center',
    },
    layouts_row010_right: {
        width: '20%',
        justifyContent: 'flex-end',
    }
}, ({ s = () => { }, block }) => {
    const content = block.content || {};
    return (react_1.default.createElement(renderer_1.View, { style: s('layouts_row010') },
        !!content.left && react_1.default.createElement(renderer_1.View, { style: s('layouts_row010_left') },
            react_1.default.createElement(Block_1.default, { id: content.left.id, block: content.left })),
        !!content.center && react_1.default.createElement(renderer_1.View, { style: s('layouts_row010_center') },
            react_1.default.createElement(Block_1.default, { id: content.center.id, block: content.center || {} })),
        !!content.right && react_1.default.createElement(renderer_1.View, { style: s('layouts_row010_right') },
            react_1.default.createElement(Block_1.default, { id: content.right.id, block: content.right }))));
});
exports.default = exports.Row010LayoutBlock;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUm93MDEwTGF5b3V0QmxvY2suanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvYmxvY2tzL2xheW91dHMvUm93MDEwTGF5b3V0QmxvY2sudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsa0RBQTBCO0FBQzFCLHdEQUFnQztBQUNoQyxrREFBeUM7QUFDekMscUNBQXdDO0FBRTNCLFFBQUEsaUJBQWlCLEdBQUcsbUJBQVksQ0FBeUI7SUFDbEUsY0FBYyxFQUFFO1FBQ1osT0FBTyxFQUFFLE1BQU07UUFDZixhQUFhLEVBQUUsS0FBSztLQUN2QjtJQUNELG1CQUFtQixFQUFFO1FBQ2pCLEtBQUssRUFBRSxLQUFLO1FBQ1osY0FBYyxFQUFFLFlBQVk7S0FDL0I7SUFDRCxxQkFBcUIsRUFBRTtRQUNuQixJQUFJLEVBQUUsQ0FBQztRQUNQLGNBQWMsRUFBRSxRQUFRO0tBQzNCO0lBQ0Qsb0JBQW9CLEVBQUU7UUFDbEIsS0FBSyxFQUFFLEtBQUs7UUFDWixjQUFjLEVBQUUsVUFBVTtLQUM3QjtDQUNKLEVBQUUsQ0FBQyxFQUFDLENBQUMsR0FBRyxHQUFHLEVBQUUsR0FBRSxDQUFDLEVBQUUsS0FBSyxFQUF5QixFQUFFLEVBQUU7SUFDakQsTUFBTSxPQUFPLEdBQUcsS0FBSyxDQUFDLE9BQU8sSUFBSSxFQUFFLENBQUM7SUFDcEMsT0FBTyxDQUNILDhCQUFDLGVBQUksSUFBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLGdCQUFnQixDQUFDO1FBQzNCLENBQUMsQ0FBQyxPQUFPLENBQUMsSUFBSSxJQUFJLDhCQUFDLGVBQUksSUFBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLHFCQUFxQixDQUFDO1lBQUUsOEJBQUMsZUFBSyxJQUFDLEVBQUUsRUFBRSxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBRSxLQUFLLEVBQUUsT0FBTyxDQUFDLElBQUksR0FBSSxDQUFPO1FBQ25ILENBQUMsQ0FBQyxPQUFPLENBQUMsTUFBTSxJQUFJLDhCQUFDLGVBQUksSUFBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLHVCQUF1QixDQUFDO1lBQUUsOEJBQUMsZUFBSyxJQUFDLEVBQUUsRUFBRSxPQUFPLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxLQUFLLEVBQUUsT0FBTyxDQUFDLE1BQU0sSUFBSSxFQUFFLEdBQUksQ0FBTztRQUNqSSxDQUFDLENBQUMsT0FBTyxDQUFDLEtBQUssSUFBSSw4QkFBQyxlQUFJLElBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxzQkFBc0IsQ0FBQztZQUFFLDhCQUFDLGVBQUssSUFBQyxFQUFFLEVBQUUsT0FBTyxDQUFDLEtBQUssQ0FBQyxFQUFFLEVBQUUsS0FBSyxFQUFFLE9BQU8sQ0FBQyxLQUFLLEdBQUksQ0FBTyxDQUNySCxDQUNWLENBQUM7QUFDTixDQUFDLENBQUMsQ0FBQztBQU9ILGtCQUFlLHlCQUFpQixDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBCbG9jayBmcm9tICcuLi8uLi9CbG9jayc7XG5pbXBvcnQge1ZpZXd9IGZyb20gJ0ByZWFjdC1wZGYvcmVuZGVyZXInO1xuaW1wb3J0IHtwZGZDb21wb25lbnR9IGZyb20gJy4uLy4uL2hvY3MnO1xuXG5leHBvcnQgY29uc3QgUm93MDEwTGF5b3V0QmxvY2sgPSBwZGZDb21wb25lbnQ8Um93MDEwTGF5b3V0QmxvY2tQcm9wcz4oe1xuICAgIGxheW91dHNfcm93MDEwOiB7XG4gICAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgICAgZmxleERpcmVjdGlvbjogJ3JvdycsXG4gICAgfSxcbiAgICBsYXlvdXRzX3JvdzAxMF9sZWZ0OiB7XG4gICAgICAgIHdpZHRoOiAnMjAlJyxcbiAgICAgICAganVzdGlmeUNvbnRlbnQ6ICdmbGV4LXN0YXJ0JyxcbiAgICB9LFxuICAgIGxheW91dHNfcm93MDEwX2NlbnRlcjoge1xuICAgICAgICBmbGV4OiAxLFxuICAgICAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgfSxcbiAgICBsYXlvdXRzX3JvdzAxMF9yaWdodDoge1xuICAgICAgICB3aWR0aDogJzIwJScsXG4gICAgICAgIGp1c3RpZnlDb250ZW50OiAnZmxleC1lbmQnLFxuICAgIH1cbn0sICh7cyA9ICgpID0+IHt9LCBibG9ja306IFJvdzAxMExheW91dEJsb2NrUHJvcHMpID0+IHtcbiAgICBjb25zdCBjb250ZW50ID0gYmxvY2suY29udGVudCB8fCB7fTtcbiAgICByZXR1cm4gKFxuICAgICAgICA8VmlldyBzdHlsZT17cygnbGF5b3V0c19yb3cwMTAnKX0+XG4gICAgICAgICAgICB7ISFjb250ZW50LmxlZnQgJiYgPFZpZXcgc3R5bGU9e3MoJ2xheW91dHNfcm93MDEwX2xlZnQnKX0+PEJsb2NrIGlkPXtjb250ZW50LmxlZnQuaWR9IGJsb2NrPXtjb250ZW50LmxlZnR9IC8+PC9WaWV3Pn1cbiAgICAgICAgICAgIHshIWNvbnRlbnQuY2VudGVyICYmIDxWaWV3IHN0eWxlPXtzKCdsYXlvdXRzX3JvdzAxMF9jZW50ZXInKX0+PEJsb2NrIGlkPXtjb250ZW50LmNlbnRlci5pZH0gYmxvY2s9e2NvbnRlbnQuY2VudGVyIHx8IHt9fSAvPjwvVmlldz59XG4gICAgICAgICAgICB7ISFjb250ZW50LnJpZ2h0ICYmIDxWaWV3IHN0eWxlPXtzKCdsYXlvdXRzX3JvdzAxMF9yaWdodCcpfT48QmxvY2sgaWQ9e2NvbnRlbnQucmlnaHQuaWR9IGJsb2NrPXtjb250ZW50LnJpZ2h0fSAvPjwvVmlldz59XG4gICAgICAgIDwvVmlldz5cbiAgICApO1xufSk7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUm93MDEwTGF5b3V0QmxvY2tQcm9wcyB7XG4gICAgcz86IEZ1bmN0aW9uLFxuICAgIGJsb2NrOiBhbnksXG59XG5cbmV4cG9ydCBkZWZhdWx0IFJvdzAxMExheW91dEJsb2NrIl19