"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.styling = (type, stylesheet, forced = undefined) => {
    const types = (Array.isArray(type) ? type : [type]).filter(x => !!x);
    const styles = {};
    if (stylesheet && stylesheet.types) {
        const foundTypeStyle = types.find(t => !!stylesheet.types[t]);
        if (foundTypeStyle)
            Object.assign(styles, stylesheet.types[foundTypeStyle]);
    }
    Object.assign(styles, forced || {});
    return Object.entries(styles).reduce((acc, [k, v]) => {
        if ('string' !== typeof v)
            return acc;
        const x = v.indexOf('$');
        if (0 > x)
            return acc;
        if (0 === x)
            acc[k] = (stylesheet.variables || {})[v.slice(1)] || undefined;
        else {
            let array;
            while ((array = /\$([a-z0-9_]+)/i.exec(v)) !== null) {
                v = v.replace(array[0], (stylesheet.variables || {})[array[1]] || undefined);
            }
            acc[k] = v;
        }
        return acc;
    }, styles);
};
exports.default = exports.styling;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGluZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9zdHlsaW5nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQWEsUUFBQSxPQUFPLEdBQUcsQ0FBQyxJQUFxQixFQUFFLFVBQWUsRUFBRSxTQUFjLFNBQVMsRUFBRSxFQUFFO0lBQ3ZGLE1BQU0sS0FBSyxHQUFhLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQy9FLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQztJQUNsQixJQUFJLFVBQVUsSUFBSSxVQUFVLENBQUMsS0FBSyxFQUFFO1FBQ2hDLE1BQU0sY0FBYyxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzlELElBQUksY0FBYztZQUFFLE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLFVBQVUsQ0FBQyxLQUFLLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQztLQUMvRTtJQUNELE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLE1BQU0sSUFBSSxFQUFFLENBQUMsQ0FBQztJQUNwQyxPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUU7UUFDakQsSUFBSSxRQUFRLEtBQUssT0FBTyxDQUFDO1lBQUUsT0FBTyxHQUFHLENBQUM7UUFDdEMsTUFBTSxDQUFDLEdBQVksQ0FBRSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNuQyxJQUFJLENBQUMsR0FBRyxDQUFDO1lBQUUsT0FBTyxHQUFHLENBQUM7UUFDdEIsSUFBSSxDQUFDLEtBQUssQ0FBQztZQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxTQUFTLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLFNBQVMsQ0FBQzthQUN2RTtZQUNELElBQUksS0FBSyxDQUFDO1lBQ1YsT0FBTyxDQUFDLEtBQUssR0FBRyxpQkFBaUIsQ0FBQyxJQUFJLENBQVMsQ0FBQyxDQUFDLENBQUMsS0FBSyxJQUFJLEVBQUU7Z0JBQ3pELENBQUMsR0FBWSxDQUFFLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxTQUFTLElBQUksRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksU0FBUyxDQUFDLENBQUM7YUFDMUY7WUFDRCxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1NBQ2Q7UUFDRCxPQUFPLEdBQUcsQ0FBQztJQUNmLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQztBQUNmLENBQUMsQ0FBQztBQUVGLGtCQUFlLGVBQU8sQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBzdHlsaW5nID0gKHR5cGU6IHN0cmluZ3xzdHJpbmdbXSwgc3R5bGVzaGVldDogYW55LCBmb3JjZWQ6IGFueSA9IHVuZGVmaW5lZCkgPT4ge1xuICAgIGNvbnN0IHR5cGVzOiBzdHJpbmdbXSA9IChBcnJheS5pc0FycmF5KHR5cGUpID8gdHlwZSA6IFt0eXBlXSkuZmlsdGVyKHggPT4gISF4KTtcbiAgICBjb25zdCBzdHlsZXMgPSB7fTtcbiAgICBpZiAoc3R5bGVzaGVldCAmJiBzdHlsZXNoZWV0LnR5cGVzKSB7XG4gICAgICAgIGNvbnN0IGZvdW5kVHlwZVN0eWxlID0gdHlwZXMuZmluZCh0ID0+ICEhc3R5bGVzaGVldC50eXBlc1t0XSk7XG4gICAgICAgIGlmIChmb3VuZFR5cGVTdHlsZSkgT2JqZWN0LmFzc2lnbihzdHlsZXMsIHN0eWxlc2hlZXQudHlwZXNbZm91bmRUeXBlU3R5bGVdKTtcbiAgICB9XG4gICAgT2JqZWN0LmFzc2lnbihzdHlsZXMsIGZvcmNlZCB8fCB7fSk7XG4gICAgcmV0dXJuIE9iamVjdC5lbnRyaWVzKHN0eWxlcykucmVkdWNlKChhY2MsIFtrLCB2XSkgPT4ge1xuICAgICAgICBpZiAoJ3N0cmluZycgIT09IHR5cGVvZiB2KSByZXR1cm4gYWNjO1xuICAgICAgICBjb25zdCB4ID0gKDxzdHJpbmc+dikuaW5kZXhPZignJCcpO1xuICAgICAgICBpZiAoMCA+IHgpIHJldHVybiBhY2M7XG4gICAgICAgIGlmICgwID09PSB4KSBhY2Nba10gPSAoc3R5bGVzaGVldC52YXJpYWJsZXMgfHwge30pW3Yuc2xpY2UoMSldIHx8IHVuZGVmaW5lZDtcbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBsZXQgYXJyYXk7XG4gICAgICAgICAgICB3aGlsZSAoKGFycmF5ID0gL1xcJChbYS16MC05X10rKS9pLmV4ZWMoPHN0cmluZz52KSkgIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICB2ID0gKDxzdHJpbmc+dikucmVwbGFjZShhcnJheVswXSwgKHN0eWxlc2hlZXQudmFyaWFibGVzIHx8IHt9KVthcnJheVsxXV0gfHwgdW5kZWZpbmVkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGFjY1trXSA9IHY7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFjYztcbiAgICB9LCBzdHlsZXMpO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgc3R5bGluZyJdfQ==