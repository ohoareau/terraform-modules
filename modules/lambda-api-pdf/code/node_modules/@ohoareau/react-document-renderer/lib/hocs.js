"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const renderer_1 = require("@react-pdf/renderer");
const ModelContext_1 = require("./contexts/ModelContext");
const ConfigContext_1 = require("./contexts/ConfigContext");
const ContextContext_1 = require("./contexts/ContextContext");
const StylesheetContext_1 = require("./contexts/StylesheetContext");
const SuggestionsContext_1 = require("./contexts/SuggestionsContext");
const styling_1 = require("./utils/styling");
const jexl_1 = __importDefault(require("jexl"));
const handlebars_1 = __importDefault(require("handlebars"));
handlebars_1.default.registerHelper('multiple', (v, options) => (v && Array.isArray(v) && 1 < v.length) ? options.fn(this) : options.inverse(this));
handlebars_1.default.registerHelper('nb', v => (v && Array.isArray(v)) ? v.length : 0);
function pdfComponent(styles, c) {
    const classes = renderer_1.StyleSheet.create(styles || {});
    const Component = props => c({ ...props, classes });
    return props => (react_1.default.createElement(ContextContext_1.ContextConsumer, null, context => (react_1.default.createElement(StylesheetContext_1.StylesheetConsumer, null, stylesheet => (react_1.default.createElement(ConfigContext_1.ConfigConsumer, null, config => (react_1.default.createElement(SuggestionsContext_1.SuggestionsConsumer, null, suggestions => (react_1.default.createElement(ModelContext_1.ModelConsumer, null, model => {
        const ctx = { ...model, _: context, config, ...context, model };
        const s = (names, forced = {}) => {
            names = (Array.isArray(names) ? names : [names]).filter(x => !!x);
            const styles = [];
            let found = false;
            names.forEach(name => {
                if (Array.isArray(name)) {
                    name = name.find(n => stylesheet && stylesheet['types'] && !!stylesheet['types'][n]);
                }
                if (name) {
                    classes[name] && styles.push(classes[name]);
                    styles.push(styling_1.styling(name, stylesheet, forced));
                    found = true;
                }
            });
            if (!found) {
                names.forEach(name => {
                    classes[name] && styles.push(classes[name]);
                });
                forced && styles.push(forced);
            }
            return styles;
        };
        const v = (x, extra = {}) => {
            if ('string' !== typeof x)
                return x;
            if ('$' === x.slice(0, 1))
                return jexl_1.default.evalSync(x.slice(1), { ...ctx, ...extra });
            return handlebars_1.default.compile(x)({ ...ctx, ...extra });
        };
        const test = (x) => !!v(x);
        const cfg = { visible: true, ...(config[props['id']] || {}) };
        return (react_1.default.createElement(Component, Object.assign({}, props, { stylesheet: stylesheet, config: config, model: model, suggestions: suggestions, s: s, v: v, cfg: cfg, test: test })));
    }))))))))));
}
exports.pdfComponent = pdfComponent;
//# sourceMappingURL=data:application/json;base64,