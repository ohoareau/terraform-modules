"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class AbstractError extends Error {
    constructor(message, code, errorType = 'error', data = {}, errorInfo = {}) {
        super(message);
        this.code = 500;
        this.data = {};
        this.errorType = 'error';
        this.errorInfo = {};
        this.shortMessage = 'Error';
        this.setShortMessage(message.split(/\n/)[0].trim());
        this.setCode(code);
        this.setErrorType(errorType);
        this.setData(data);
        this.setErrorInfo(errorInfo);
    }
    getCode() {
        return this.code;
    }
    getMessage() {
        return this.message;
    }
    getShortMessage() {
        return this.shortMessage;
    }
    getErrorType() {
        return this.errorType;
    }
    getData() {
        return this.data;
    }
    getErrorInfo() {
        return this.errorInfo;
    }
    serialize() {
        return {
            errorType: this.getErrorType(),
            message: this.getShortMessage(),
            code: this.getCode(),
            data: this.getData(),
            errorInfo: this.getErrorInfo(),
        };
    }
    setCode(code) {
        this.code = code;
    }
    setShortMessage(shortMessage) {
        this.shortMessage = shortMessage;
    }
    setErrorType(errorType) {
        this.errorType = errorType;
    }
    setData(data) {
        this.data = data;
    }
    setErrorInfo(errorInfo) {
        this.errorInfo = errorInfo;
    }
}
exports.AbstractError = AbstractError;
exports.default = AbstractError;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWJzdHJhY3RFcnJvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9BYnN0cmFjdEVycm9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBRUEsTUFBc0IsYUFBYyxTQUFRLEtBQUs7SUFNN0MsWUFDSSxPQUFlLEVBQUUsSUFBWSxFQUFFLFlBQW9CLE9BQU8sRUFBRSxPQUFZLEVBQUUsRUFBRSxZQUFpQixFQUFFO1FBRS9GLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztRQVJULFNBQUksR0FBVyxHQUFHLENBQUM7UUFDbkIsU0FBSSxHQUFRLEVBQUUsQ0FBQztRQUNmLGNBQVMsR0FBVyxPQUFPLENBQUM7UUFDNUIsY0FBUyxHQUFRLEVBQUUsQ0FBQztRQUNwQixpQkFBWSxHQUFXLE9BQU8sQ0FBQztRQUtyQyxJQUFJLENBQUMsZUFBZSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQztRQUNwRCxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ25CLElBQUksQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDN0IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNuQixJQUFJLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ2pDLENBQUM7SUFDRCxPQUFPO1FBQ0gsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDO0lBQ3JCLENBQUM7SUFDRCxVQUFVO1FBQ04sT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3hCLENBQUM7SUFDRCxlQUFlO1FBQ1gsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDO0lBQzdCLENBQUM7SUFDRCxZQUFZO1FBQ1IsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDO0lBQzFCLENBQUM7SUFDRCxPQUFPO1FBQ0gsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDO0lBQ3JCLENBQUM7SUFDRCxZQUFZO1FBQ1IsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDO0lBQzFCLENBQUM7SUFDRCxTQUFTO1FBQ0wsT0FBTztZQUNILFNBQVMsRUFBRSxJQUFJLENBQUMsWUFBWSxFQUFFO1lBQzlCLE9BQU8sRUFBRSxJQUFJLENBQUMsZUFBZSxFQUFFO1lBQy9CLElBQUksRUFBRSxJQUFJLENBQUMsT0FBTyxFQUFFO1lBQ3BCLElBQUksRUFBRSxJQUFJLENBQUMsT0FBTyxFQUFFO1lBQ3BCLFNBQVMsRUFBRSxJQUFJLENBQUMsWUFBWSxFQUFFO1NBQ2pDLENBQUE7SUFDTCxDQUFDO0lBQ1MsT0FBTyxDQUFDLElBQVk7UUFDMUIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7SUFDckIsQ0FBQztJQUNTLGVBQWUsQ0FBQyxZQUFvQjtRQUMxQyxJQUFJLENBQUMsWUFBWSxHQUFHLFlBQVksQ0FBQztJQUNyQyxDQUFDO0lBQ1MsWUFBWSxDQUFDLFNBQWlCO1FBQ3BDLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO0lBQy9CLENBQUM7SUFDUyxPQUFPLENBQUMsSUFBUztRQUN2QixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztJQUNyQixDQUFDO0lBQ1MsWUFBWSxDQUFDLFNBQWM7UUFDakMsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7SUFDL0IsQ0FBQztDQUNKO0FBMURELHNDQTBEQztBQUVELGtCQUFlLGFBQWEsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTZXJpYWxpemFibGVFcnJvckludGVyZmFjZSBmcm9tICcuL1NlcmlhbGl6YWJsZUVycm9ySW50ZXJmYWNlJztcblxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIEFic3RyYWN0RXJyb3IgZXh0ZW5kcyBFcnJvciBpbXBsZW1lbnRzIFNlcmlhbGl6YWJsZUVycm9ySW50ZXJmYWNlIHtcbiAgICBwcm90ZWN0ZWQgY29kZTogbnVtYmVyID0gNTAwO1xuICAgIHByb3RlY3RlZCBkYXRhOiBhbnkgPSB7fTtcbiAgICBwcm90ZWN0ZWQgZXJyb3JUeXBlOiBzdHJpbmcgPSAnZXJyb3InO1xuICAgIHByb3RlY3RlZCBlcnJvckluZm86IGFueSA9IHt9O1xuICAgIHByb3RlY3RlZCBzaG9ydE1lc3NhZ2U6IHN0cmluZyA9ICdFcnJvcic7XG4gICAgcHJvdGVjdGVkIGNvbnN0cnVjdG9yKFxuICAgICAgICBtZXNzYWdlOiBzdHJpbmcsIGNvZGU6IG51bWJlciwgZXJyb3JUeXBlOiBzdHJpbmcgPSAnZXJyb3InLCBkYXRhOiBhbnkgPSB7fSwgZXJyb3JJbmZvOiBhbnkgPSB7fVxuICAgICkge1xuICAgICAgICBzdXBlcihtZXNzYWdlKTtcbiAgICAgICAgdGhpcy5zZXRTaG9ydE1lc3NhZ2UobWVzc2FnZS5zcGxpdCgvXFxuLylbMF0udHJpbSgpKTtcbiAgICAgICAgdGhpcy5zZXRDb2RlKGNvZGUpO1xuICAgICAgICB0aGlzLnNldEVycm9yVHlwZShlcnJvclR5cGUpO1xuICAgICAgICB0aGlzLnNldERhdGEoZGF0YSk7XG4gICAgICAgIHRoaXMuc2V0RXJyb3JJbmZvKGVycm9ySW5mbyk7XG4gICAgfVxuICAgIGdldENvZGUoKTogbnVtYmVyIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29kZTtcbiAgICB9XG4gICAgZ2V0TWVzc2FnZSgpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy5tZXNzYWdlO1xuICAgIH1cbiAgICBnZXRTaG9ydE1lc3NhZ2UoKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2hvcnRNZXNzYWdlO1xuICAgIH1cbiAgICBnZXRFcnJvclR5cGUoKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZXJyb3JUeXBlO1xuICAgIH1cbiAgICBnZXREYXRhKCk6IGFueSB7XG4gICAgICAgIHJldHVybiB0aGlzLmRhdGE7XG4gICAgfVxuICAgIGdldEVycm9ySW5mbygpOiBhbnkge1xuICAgICAgICByZXR1cm4gdGhpcy5lcnJvckluZm87XG4gICAgfVxuICAgIHNlcmlhbGl6ZSgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGVycm9yVHlwZTogdGhpcy5nZXRFcnJvclR5cGUoKSxcbiAgICAgICAgICAgIG1lc3NhZ2U6IHRoaXMuZ2V0U2hvcnRNZXNzYWdlKCksXG4gICAgICAgICAgICBjb2RlOiB0aGlzLmdldENvZGUoKSxcbiAgICAgICAgICAgIGRhdGE6IHRoaXMuZ2V0RGF0YSgpLFxuICAgICAgICAgICAgZXJyb3JJbmZvOiB0aGlzLmdldEVycm9ySW5mbygpLFxuICAgICAgICB9XG4gICAgfVxuICAgIHByb3RlY3RlZCBzZXRDb2RlKGNvZGU6IG51bWJlcikge1xuICAgICAgICB0aGlzLmNvZGUgPSBjb2RlO1xuICAgIH1cbiAgICBwcm90ZWN0ZWQgc2V0U2hvcnRNZXNzYWdlKHNob3J0TWVzc2FnZTogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMuc2hvcnRNZXNzYWdlID0gc2hvcnRNZXNzYWdlO1xuICAgIH1cbiAgICBwcm90ZWN0ZWQgc2V0RXJyb3JUeXBlKGVycm9yVHlwZTogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMuZXJyb3JUeXBlID0gZXJyb3JUeXBlO1xuICAgIH1cbiAgICBwcm90ZWN0ZWQgc2V0RGF0YShkYXRhOiBhbnkpIHtcbiAgICAgICAgdGhpcy5kYXRhID0gZGF0YTtcbiAgICB9XG4gICAgcHJvdGVjdGVkIHNldEVycm9ySW5mbyhlcnJvckluZm86IGFueSkge1xuICAgICAgICB0aGlzLmVycm9ySW5mbyA9IGVycm9ySW5mbztcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEFic3RyYWN0RXJyb3IiXX0=