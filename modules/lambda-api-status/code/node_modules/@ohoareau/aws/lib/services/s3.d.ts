export declare const s3: {
    deleteFile: ({ bucket, key }: {
        bucket: any;
        key: any;
    }) => Promise<any>;
    deleteDirectory: ({ bucket, key }: {
        bucket: any;
        key: any;
    }) => any;
    getFile: ({ bucket, key, raw }: {
        bucket: any;
        key: any;
        raw?: boolean | undefined;
    }) => Promise<{
        body: any;
    }>;
    getFileContent: (query: any) => Promise<any>;
    getFileUploadUrl: ({ bucket, key, expires }: {
        bucket: any;
        key: any;
        expires?: number | undefined;
    }) => Promise<unknown>;
    getFileDownloadUrl: ({ bucket, key, name }: {
        bucket: any;
        key: any;
        name: any;
    }) => Promise<{
        downloadUrl: any;
        fileUrl: any;
        fields: string;
        fileName: any;
    }>;
    getFileViewUrl: ({ bucket, key, contentType }: {
        bucket: any;
        key: any;
        contentType: any;
    }) => Promise<{
        viewUrl: any;
        fileUrl: any;
        fields: string;
        contentType: any;
    }>;
    fromJsonFile: (bucket: any, key: any) => Promise<any>;
    toJsonFile: (bucket: any, key: any, data: any) => Promise<any>;
    setFile: ({ bucket, key }: {
        bucket: any;
        key: any;
    }, content: any) => Promise<any>;
    setFileContent: ({ bucket, key }: {
        bucket: any;
        key: any;
    }, content: any) => Promise<any>;
    getFileMetadata: ({ bucket, key, original }: {
        bucket: string;
        key: string;
        original?: boolean | undefined;
    }) => Promise<any>;
};
export default s3;
//# sourceMappingURL=s3.d.ts.map